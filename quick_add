#!/usr/bin/env ruby

CATEGORIES = [:forensics, :web, :cryptography, :reverse_engineering, :binary_exploitation, :programming, :pwn]

def gets_ctf
  puts "Which Capture the Flag?"
  puts "[1] - PicoCTF Gym"
  puts "[2] - CTFLearn"
  choice = gets.chomp.to_i
  case choice
  when 1
    :picoctf_gym
  when 2
    :ctf_learn
  else
    puts "[ERROR]: Can't use quick_add for unrecognized CTF."
    gets_ctf
  end
end

def gets_file_path(ctf)
  puts "Name?"
  name = gets.chomp
  case ctf
  when :picoctf_gym
    "./writeups/picoctf_gym/#{name}.md"
  when :ctf_learn
    "./writeups/ctflearn/#{name}.md"
  end
end

def gets_url(ctf)
  puts "URL ID?"
  id = gets.chomp
  case ctf
  when :picoctf_gym
    "https://play.picoctf.org/practice/challenge/#{id}"
  when :ctf_learn
    "https://ctflearn.com/challenge/#{id}"
  end
end

def gets_categories
  puts "Categories? (Comma seperated) [forensics, web, cryptography, reverse_engineering, binary_exploitation, programming, pwn]"
  categories = gets.chomp.gsub(/\s+/, "").split(",").map(&:to_sym)
  diff = categories - CATEGORIES
  if diff.any?
    puts "New categories detected: #{diff}"
    puts "Proceed? [Y/n]"
    proceed = gets.chomp
    if proceed != "Y" && proceed != "y"
      categories = gets_categories
    end
  end
  categories
end

def gets_points
  puts "Points?"
  gets.chomp
end

def gets_tools
  puts "Tools? (Comma seperated)"
  gets.chomp.gsub(/\s+/, "").split(",")
end

def gets_flag
  puts "Flag?"
  gets.chomp
end

def gets_summary
  puts "Summary?"
  gets.chomp
end

def gets_description
  puts "Description?"
  gets.chomp
end

def update_db
  puts "Would you like to update ctf.db? [Y/n]"
  choice = gets.chomp
  if choice == "y" || choice == "Y"
    puts "Running `./update_db`"
    puts `./update_db`
  end
end

puts "==CTF WRITEUP QUICKADD=="
ctf = gets_ctf
file_path = gets_file_path(ctf)
url = gets_url(ctf)
categories = gets_categories
points = gets_points
tools = gets_tools
flag = gets_flag
summary = gets_summary
description = gets_description
captured = Time.now.strftime("%Y-%m-%e")

puts "\n\n"
puts "Writing file #{file_path}"

File.open(file_path, "w") do |f|
  f.puts "---"
  f.puts "ctf: #{ctf}"
  f.puts "competition: false"
  f.puts "categories: [#{categories.join(", ")}]"
  f.puts "tools: [#{tools.join(", ")}]"
  f.puts "url: #{url}"
  f.puts "points: #{points}"
  f.puts "captured: #{captured}"
  f.puts "flag: #{flag}"
  f.puts "summary: #{summary}"
  f.puts "---"
  f.puts "\n"
  f.puts "> #{description}"
end

puts "File contents:"

puts File.read(file_path)

puts "\n\n"

update_db